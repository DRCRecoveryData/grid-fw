name: Firmware release workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
  push:
    tags:
     - 'v*.*.*'
     
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo and submodules
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          ref: ${{ github.ref }}
      
      - name: Echo ref, List files
        run: |
          echo ${{ github.ref }}
          ls
          
      - name: Install GNU Arm Embedded Toolchain (arm-none-eabi-gcc)
        uses: carlosperate/arm-none-eabi-gcc-action@v1
        with:
          release: '9-2020-q2' # <-- The compiler release to use

      - name: Test ARM GCC and build D51 firmware variant
        run: |
          arm-none-eabi-gcc -v
          cd grid_make/gcc && make release_automation
          
      - name: esp-idf build
        uses: espressif/esp-idf-ci-action@v1
        with:
          esp_idf_version: latest
          target: esp32s3
          path: 'grid_esp'
          command: idf.py build

      - name: Convert ESP firmware to UF2
        run: |
          cd ./grid_esp
          mkdir ./output
          python3 ./tools/uf2conv.py -f ESP32S3 ./build/grid_fw.bin -b 0x0 -c -o ./output/grid_fw.uf2
          
          
      - name: Set Date
        run: echo "action_date=$(date +'%Y-%m-%d-%H%M')" >> $GITHUB_ENV
             
      - name: Set env
        shell: bash
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: See env
        run: echo "${{ env.RELEASE_VERSION }}"
        
      - name: Copy and rename the artifacts
        run: |
          ls
          cp binary/grid_release.uf2 grid_d51_release_${{ env.action_date }}.uf2
          cp grid_esp/output/grid_fw.uf2 grid_esp32_release_${{ env.action_date }}.uf2

      - name: Copy and rename INSTRUCTIONS.txt
        run: |
          ls
          cp .github/workflows/INSTRUCTIONS.txt INSTRUCTIONS__USE_D51_VERSION_IF_UNSURE.txt
         
      - name: Zipping artifacts for Discord      
        uses: vimtor/action-zip@v1
        with:
          files: grid_d51_release_${{ env.action_date }}.uf2 grid_esp32_release_${{ env.action_date }}.uf2 INSTRUCTIONS__USE_D51_VERSION_IF_UNSURE.txt
          dest: grid_release_${{ env.action_date }}.zip
          
      - name: Zipping artifacts for Github Release   
        uses: vimtor/action-zip@v1
        with:
          files: grid_d51_release_${{ env.action_date }}.uf2 grid_esp32_release_${{ env.action_date }}.uf2 INSTRUCTIONS__USE_D51_VERSION_IF_UNSURE.txt
          dest: grid_release.zip     
          
      - uses: tsickert/discord-webhook@v4.0.0
        with:
          webhook-url: ${{ secrets.WEBHOOK_URL }}
          content: "Congrats, the Release Firmware is Fire!"
          filename: "grid_release_${{ env.action_date }}.zip"
          
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          name: Grid  ${{ env.RELEASE_VERSION }} (${{ env.action_date }})
          files: grid_release.zip
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
