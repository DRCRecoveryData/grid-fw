{
    "files.associations": {
        "grid_esp32_port.h": "c",
        "grid_port.h": "c",
        "grid_sys.h": "c",
        "semphr.h": "c",
        "task.h": "c",
        "ledc.h": "c",
        "esp_timer.h": "c",
        "cstring": "c",
        "string.h": "c",
        "complex": "c",
        "string_view": "c",
        "regex": "c",
        "grid_esp32_module_pbf4.h": "c",
        "grid_esp32_module_bu16.h": "c",
        "grid_esp32_module_en16.h": "c"
    },   
    "files.exclude": {
        ".archive": true,
        "Documentation": true,
        "LICENSE": true,
        "diagram.svg": true,
        "grid_make/CMSIS": true,
        "grid_make/armcc": true,
        "grid_make/hal": true,
        "grid_make/hpl": true,
        "grid_make/hri": true,
        "grid_make/samd51a": true,
    }
    ,
    "actionButtons": {
        "defaultColor": "#ff0034", // Can also use string color names.
        "loadNpmCommands":false, // Disables automatic generation of actions for npm commands.
        "reloadButton":"♻️", // Custom reload button text or icon (default ↻). null value enables automatic reload on configuration change
        "commands": [
            {
                "name": "Clean",
                "color": "white",
                "singleInstance": true,
                "command": "git clean -dxf",
            },
            {
                "name": "ESP32 Docker",
                "color": "white",
                "singleInstance": true,
                "command": "podman run --privileged -it -v /dev:/dev -v $PWD:/project -w /project/grid_esp espressif/idf:latest",
                // clear && idf.py build && idf.py -p $(ls /dev/ttyACM*) flash
                // ./burn_bootloader.sh
                // clear && idf.py build && esptool.py --chip esp32s3 -p $(ls /dev/ttyACM*) --before=default_reset --after=no_reset write_flash --flash_mode dio --flash_size detect --flash_freq 80m 0x10000 build/grid_fw.bin && otatool.py -p $(ls /dev/ttyACM*) switch_ota_partition --slot 0
            },
            {
                "name": "ESP32 Monitor",
                "color": "white",
                "singleInstance": true,
                "command": "podman run --privileged -it -v /dev:/dev -v $PWD:/project -w /project/grid_esp espressif/idf:latest",
                // idf.py -p $(ls /dev/ttyUSB*) monitor
            },
            {
                "name": "PICO Terminal",
                "color": "white",
                "singleInstance": true,
                "command": "podman run -it -v $PWD:/pico/project -w /pico/project/grid_pico atoktoto/pico-builder:latest",
                // mkdir -p ./build && cd build && cmake .. && make
                // apt update && apt install xxd
                // git clean -dxf
                // clear && make && xxd -i ./main/main.bin > ../../grid_esp/main/pico_firmware.h && sed -i 's/__main_main_bin/pico_firmware/g; s/unsigned/const unsigned/g' ../../grid_esp/main/pico_firmware.h
            },
            {
                "name": "PICO Convert",
                "color": "white",
                "singleInstance": true,
                "command": "xxd -i ./grid_pico/build/main/main.bin > ./grid_esp/main/pico_firmware.h && sed -i 's/__grid_pico_build_main_main_bin/pico_firmware/g; s/unsigned/const unsigned/g' ./grid_esp/main/pico_firmware.h",
            }
        ]
    }
}